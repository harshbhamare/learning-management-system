<!DOCTYPE html>
<html lang="en" class="dark">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin Panel | Hustler.XERO</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
</head>
<body class="bg-gray-50 dark:bg-gray-900 font-inter transition-colors duration-500">

  <!-- Header -->
  <header class="bg-white dark:bg-gray-800 shadow-md p-6 flex justify-between items-center">
    <h1 class="text-3xl font-extrabold text-gray-900 dark:text-white">Admin Panel</h1>
    <button id="theme-toggle" 
      class="p-3 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700 transition">
      <i class="fas fa-sun text-2xl hidden dark:block"></i>
      <i class="fas fa-moon text-2xl block dark:hidden"></i>
    </button>
  </header>

  <!-- Main Content -->
  <main class="p-6 lg:p-10">
    <!-- Dashboard -->
    <section id="dashboard" class="bg-white dark:bg-gray-800 rounded-2xl p-8 shadow-lg">
      <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6 gap-4">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white">All Courses</h2>
        <button id="add-course-btn" 
          class="bg-blue-600 text-white font-semibold py-2 px-6 rounded-lg shadow hover:bg-blue-700 transition">
          <i class="fas fa-plus mr-2"></i> Add New Course
        </button>
      </div>

      <!-- Courses Table -->
      <div id="course-list" class="overflow-x-auto">
        <table class="min-w-full table-auto border-collapse">
          <thead>
            <tr class="bg-gray-100 dark:bg-gray-700">
              <th class="py-3 px-4 text-left font-semibold text-gray-800 dark:text-gray-200">Course Name</th>
              <th class="py-3 px-4 hidden md:table-cell text-left">Instructor</th>
              <th class="py-3 px-4 hidden lg:table-cell text-left">Chapters</th>
              <th class="py-3 px-4 text-right">Actions</th>
            </tr>
          </thead>
          <tbody class="divide-y divide-gray-200 dark:divide-gray-700">
            <% if (courses.length > 0) { %>
              <% courses.forEach(course => { %>
                <tr class="hover:bg-gray-50 dark:hover:bg-gray-700 transition">
                  <td class="py-4 px-4 font-medium text-gray-900 dark:text-gray-100"><%= course.title %></td>
                  <td class="py-4 px-4 hidden md:table-cell text-gray-700 dark:text-gray-300"><%= course.instructor %></td>
                  <td class="py-4 px-4 hidden lg:table-cell text-gray-700 dark:text-gray-300"><%= course.chapters.length %></td>
                  <td class="py-4 px-4 text-right space-x-3">
                    <button class="view-videos-btn text-blue-500 hover:text-blue-700" data-id="<%= course._id %>" title="Manage Chapters">
                      <i class="fas fa-video"></i>
                    </button>
                    <button class="edit-course-btn text-yellow-500 hover:text-yellow-700" data-id="<%= course._id %>" title="Edit">
                      <i class="fas fa-edit"></i>
                    </button>
                    <button class="delete-course-btn text-red-500 hover:text-red-700" data-id="<%= course._id %>" title="Delete">
                      <i class="fas fa-trash"></i>
                    </button>
                  </td>
                </tr>
              <% }) %>
            <% } else { %>
              <tr>
                <td colspan="4" class="text-center py-6 text-gray-500 dark:text-gray-400">
                  No courses found. Add one to get started!
                </td>
              </tr>
            <% } %>
          </tbody>
        </table>
      </div>
    </section>
  </main>

  <!-- Course Modal -->
  <div id="course-modal" class="hidden fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 backdrop-blur-sm">
    <div class="bg-white dark:bg-gray-800 rounded-xl shadow-2xl p-8 w-full max-w-2xl relative">
      <button id="close-modal-btn" class="absolute top-4 right-4 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">
        <i class="fas fa-times text-xl"></i>
      </button>
      <h3 id="modal-title" class="text-2xl font-bold mb-6 text-gray-900 dark:text-white"></h3>
      <form id="course-form" method="post" action="/admin/add-course" class="space-y-4">
        <input type="hidden" id="course-id">
        <div>
          <label for="course-title" class="block text-sm font-medium mb-1">Course Title</label>
          <input type="text" id="course-title" name="title" required 
            class="w-full border rounded-lg px-3 py-2 dark:bg-gray-700 dark:border-gray-600">
        </div>
        <div>
          <label for="course-description" class="block text-sm font-medium mb-1">Description</label>
          <textarea id="course-description" name="description" required rows="3" 
            class="w-full border rounded-lg px-3 py-2 dark:bg-gray-700 dark:border-gray-600"></textarea>
        </div>
        <div>
          <label for="course-thumbnail" class="block text-sm font-medium mb-1">Thumbnail URL</label>
          <input type="url" id="course-thumbnail" name="thumbnailUrl" required 
            class="w-full border rounded-lg px-3 py-2 dark:bg-gray-700 dark:border-gray-600">
        </div>
        <div>
          <label for="course-instructor" class="block text-sm font-medium mb-1">Course Instructor</label>
          <input type="text" id="course-instructor" name="instructor" required 
            class="w-full border rounded-lg px-3 py-2 dark:bg-gray-700 dark:border-gray-600">
        </div>
        <div class="flex justify-end pt-4">
          <button type="submit" 
            class="bg-blue-600 text-white font-semibold py-2 px-6 rounded-lg shadow hover:bg-blue-700 transition">
            Save Course
          </button>
        </div>
      </form>
    </div>
  </div>

  <!-- Videos Modal -->
  <div id="videos-modal" class="hidden fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 backdrop-blur-sm">
    <div class="bg-white dark:bg-gray-800 rounded-xl shadow-2xl p-8 w-full max-w-4xl relative">
      <button id="close-videos-modal-btn" class="absolute top-4 right-4 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">
        <i class="fas fa-times text-xl"></i>
      </button>
      <h3 class="text-2xl font-bold mb-6 text-gray-900 dark:text-white">
        Manage Chapters for "<span id="videos-course-title"></span>"
      </h3>
      <div class="space-y-6">
        <div id="chapters-list-container" class="space-y-4 max-h-96 overflow-y-auto pr-4">
          <div id="chapters-content" class="space-y-4"></div>
        </div>
        <form id="add-chapter-form" method="POST" class="pt-6 border-t border-gray-200 dark:border-gray-700 space-y-3">
          <h4 class="text-lg font-semibold">Add New Chapter</h4>
          <div class="flex flex-col sm:flex-row items-stretch gap-3">
            <input type="text" name="title" placeholder="Enter new chapter title" required 
              class="flex-grow border rounded-lg px-3 py-2 dark:bg-gray-700 dark:border-gray-600">
            <button type="submit" 
              class="bg-green-600 text-white font-semibold py-2 px-6 rounded-lg shadow hover:bg-green-700 transition">
              <i class="fas fa-plus mr-2"></i>Add Chapter
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <!-- Script -->
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const coursesData = <%- JSON.stringify(courses) %>;
      const themeToggle = document.getElementById('theme-toggle');
      const htmlElement = document.documentElement;

      // Dark mode toggle
      if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
        htmlElement.classList.add('dark');
      } else {
        htmlElement.classList.remove('dark');
      }
      themeToggle.addEventListener('click', () => {
        htmlElement.classList.toggle('dark');
        localStorage.theme = htmlElement.classList.contains('dark') ? 'dark' : 'light';
      });

      // Modals
      const courseModal = document.getElementById('course-modal');
      const videosModal = document.getElementById('videos-modal');
      const showModal = (modal) => modal.classList.remove('hidden');
      const hideModal = (modal) => modal.classList.add('hidden');

      document.getElementById('add-course-btn').addEventListener('click', () => {
        document.getElementById('modal-title').textContent = 'Add New Course';
        document.getElementById('course-form').reset();
        showModal(courseModal);
      });
      document.getElementById('close-modal-btn').addEventListener('click', () => hideModal(courseModal));
      document.getElementById('close-videos-modal-btn').addEventListener('click', () => hideModal(videosModal));

      // Escape key closes modals
      window.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
          hideModal(courseModal);
          hideModal(videosModal);
        }
      });

      // Handle course actions
      document.getElementById('course-list').addEventListener('click', (e) => {
        const target = e.target.closest('button');
        if (!target) return;
        const courseId = target.dataset.id;
        const course = coursesData.find(c => c._id === courseId);

        if (target.classList.contains('view-videos-btn') && course) {
          document.getElementById('videos-course-title').textContent = course.title;
          document.getElementById('add-chapter-form').action = `/admin/course/${courseId}/add-chapter`;
          const chaptersContent = document.getElementById('chapters-content');
          chaptersContent.innerHTML = '';

          if (course.chapters && course.chapters.length > 0) {
            course.chapters.forEach(chapter => {
              const chapterId = chapter._id;
              const chapterElement = document.createElement('div');
              chapterElement.className = 'p-4 rounded-lg bg-gray-100 dark:bg-gray-800';

              let videosHTML = `<div class="mt-3 pl-4 border-l-2 border-gray-300 dark:border-gray-600 space-y-2" id="videos-list-${chapterId}">`;
              if (chapter.videos && chapter.videos.length > 0) {
                chapter.videos.forEach(video => {
                  videosHTML += `
                    <div class="text-sm">
                      <strong>${video.title}</strong>
                      <p class="text-gray-500 dark:text-gray-400">${video.description}</p>
                    </div>`;
                });
              } else {
                videosHTML += '<p class="text-sm text-gray-400 no-videos-message">No lectures in this chapter yet.</p>';
              }
              videosHTML += '</div>';

              chapterElement.innerHTML = `
                <p class="font-semibold text-lg text-gray-900 dark:text-gray-100">${chapter.title}</p>
                ${videosHTML}
                <form method="POST" action="/admin/course/${courseId}/chapter/${chapterId}/add-video" 
                  class="add-video-form space-y-3 mt-4 p-3 bg-gray-200 dark:bg-gray-700 rounded-md" data-chapter-id="${chapterId}">
                  <h5 class="font-semibold text-sm">Add New Lecture</h5>
                  <input type="text" name="title" placeholder="Lecture Title" required class="w-full border rounded-lg px-3 py-2 dark:bg-gray-600 dark:border-gray-500">
                  <textarea name="description" placeholder="Lecture Description" required rows="2" class="w-full border rounded-lg px-3 py-2 dark:bg-gray-600 dark:border-gray-500"></textarea>
                  <input type="url" name="youtubeLink" placeholder="YouTube Link" required class="w-full border rounded-lg px-3 py-2 dark:bg-gray-600 dark:border-gray-500">
                  <button type="submit" class="bg-blue-600 text-white px-4 py-2 text-sm rounded-lg hover:bg-blue-700 transition">Add Lecture</button>
                </form>
              `;
              chaptersContent.appendChild(chapterElement);
            });
          } else {
            chaptersContent.innerHTML = '<p class="text-center text-gray-500">No chapters yet.</p>';
          }
          showModal(videosModal);
        }
      });

      // Handle add video
      document.getElementById('videos-modal').addEventListener('submit', async function(e) {
        if (!e.target.classList.contains('add-video-form')) return;
        e.preventDefault();
        const form = e.target;
        const chapterId = form.dataset.chapterId;
        try {
          const response = await fetch(form.action, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(Object.fromEntries(new FormData(form)))
          });
          if (!response.ok) throw new Error('Server error');
          const newVideo = await response.json();
          const videoListContainer = document.getElementById(`videos-list-${chapterId}`);
          const noVideosMessage = videoListContainer.querySelector('.no-videos-message');
          if (noVideosMessage) noVideosMessage.remove();
          const newVideoElement = document.createElement('div');
          newVideoElement.className = 'text-sm';
          newVideoElement.innerHTML = `<strong>${newVideo.title}</strong><p class="text-gray-500 dark:text-gray-400">${newVideo.description}</p>`;
          videoListContainer.appendChild(newVideoElement);
          form.reset();
        } catch (error) {
          console.error('Failed to add video:', error);
          alert('Could not add lecture.');
        }
      });
    });
  </script>

</body>
</html>
